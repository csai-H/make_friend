{"remainingRequest":"C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\csais\\Desktop\\system-vue-demo\\src\\views\\main\\menu\\SysMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\csais\\Desktop\\system-vue-demo\\src\\views\\main\\menu\\SysMenu.vue","mtime":1713256627462},{"path":"C:\\Users\\csais\\Desktop\\system-vue-demo\\babel.config.js","mtime":1713256627449},{"path":"C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713256876055},{"path":"C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1713256876371},{"path":"C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713256876055},{"path":"C:\\Users\\csais\\Desktop\\system-vue-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":1713256869965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Lyog5byV5YWl6I+c5Y2V566h55CGYXBp5o6l5Y+jICovCmltcG9ydCBtZW51IGZyb20gJy4uLy4uLy4uL2FwaS9tZW51L21lbnUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlN5c01lbnUiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZW51VHJlZUxpc3Q6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLyog6I635Y+W6I+c5Y2V5qCRICovCiAgICBhc3luYyBnZXRNZW51VHJlZSgpIHsKICAgICAgY29uc3QgewogICAgICAgIGRhdGEKICAgICAgfSA9IGF3YWl0IG1lbnUuZ2V0TWVudVRyZWUoKTsKICAgICAgdGhpcy5tZW51VHJlZUxpc3QgPSBkYXRhLmRhdGEucmVzdWx0OwogICAgfQogIH0sCiAgLy/lvZPpobXpnaLliqDovb3ml7bojrflj5bmlbDmja4KICBjcmVhdGVkKCkgewogICAgLy8g6I635Y+W6I+c5Y2V5qCR5YiX6KGoCiAgICB0aGlzLmdldE1lbnVUcmVlKCk7CiAgfQp9Ow=="},{"version":3,"mappings":"AAmEA;AACA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;MACA;QAAAF;MAAA;MACA;IACA;EACA;EACA;EACAG;IACA;IACA;EACA;AACA","names":["name","data","menuTreeList","methods","created"],"sourceRoot":"src/views/main/menu","sources":["SysMenu.vue"],"sourcesContent":["<!-- 菜单管理页面 -->\r\n<template>\r\n  <div>\r\n    <!-- 1、新增按钮区域 -->\r\n    <div style=\"display: flex;justify-content: flex-start\">\r\n      <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\">新增</el-button>\r\n    </div>\r\n    <!-- 2、分隔线区域 -->\r\n    <el-divider style=\"margin-top: 20px\"></el-divider>\r\n    <!-- 3、菜单表格区域 -->\r\n    <el-table\r\n      :data=\"menuTreeList\"\r\n      style=\"width: 100%;margin-bottom: 20px;\"\r\n      row-key=\"id\"\r\n      border\r\n      :default-expand-all=\"false\"\r\n      height=\"72vh\"\r\n      :tree-props=\"{children: 'children'}\">\r\n      <el-table-column\r\n        prop=\"name\"\r\n        label=\"菜单名称\"\r\n        align=\"center\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        align=\"center\"\r\n        prop=\"type\"\r\n        label=\"类型\">\r\n        <!--进行条件判断-->\r\n        <template slot-scope=\"scope\">\r\n          <!--获取type属性，进行条件判断-->\r\n          <el-tag v-if=\"scope.row.type===0\">目录</el-tag>\r\n          <el-tag type=\"success\" v-else-if=\"scope.row.type===1\">菜单</el-tag>\r\n          <el-tag type=\"info\" v-else>按钮</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        align=\"center\"\r\n        prop=\"icon\"\r\n        label=\"图标\">\r\n        <template slot-scope=\"scope\">\r\n          <i :class=\"scope.row.icon\"></i>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" prop=\"perms\" label=\"权限标识\"/>\r\n      <el-table-column align=\"center\" prop=\"path\" label=\"路由地址\"/>\r\n      <el-table-column align=\"center\" prop=\"component\" label=\"组件路径\"/>\r\n      <el-table-column align=\"center\" prop=\"sortValue\" label=\"排序\"/>\r\n      <el-table-column align=\"center\" label=\"status\" width=\"80\">\r\n        <template slot-scope=\"scope\">\r\n          <el-switch\r\n            :value=\"scope.row.status === 1\" :disabled=\"true\">\r\n          </el-switch>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" prop=\"createTime\" label=\"创建时间\" width=\"160\"/>\r\n      <el-table-column label=\"操作\" width=\"180\" align=\"center\" fixed=\"right\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"success\" v-if=\"scope.row.type !== 2\" icon=\"el-icon-plus\" size=\"mini\" title=\"添加下级节点\"/>\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" title=\"修改\"/>\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" title=\"删除\" :disabled=\"scope.row.children.length > 0\"/>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    /* 引入菜单管理api接口 */\r\n    import menu from '../../../api/menu/menu'\r\n    export default {\r\n      name: \"SysMenu\",\r\n      data() {\r\n        return {\r\n          menuTreeList: []\r\n        }\r\n      },\r\n      methods: {\r\n        /* 获取菜单树 */\r\n        async getMenuTree() {\r\n          const { data } = await menu.getMenuTree();\r\n          this.menuTreeList = data.data.result\r\n        }\r\n      },\r\n      //当页面加载时获取数据\r\n      created () {\r\n        // 获取菜单树列表\r\n        this.getMenuTree()\r\n      }\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  /* 分隔线样式 */\r\n  .el-divider--horizontal {\r\n    display: block;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin: 10px 0;\r\n  }\r\n\r\n</style>\r\n"]}]}